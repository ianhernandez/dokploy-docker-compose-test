version: "3"

services:
  # next-app:
  #   build:
  #     context: ./next-app
  #     dockerfile: prod.Dockerfile
  #     args:
  #       ENV_VARIABLE: ${ENV_VARIABLE}
  #       NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
  #   restart: always
  #   ports:
  #     - 3000
  #   networks:
  #     - dokploy-network
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.next-app.rule=Host(`next-app.dokploy.com`)
  #     - traefik.http.routers.next-app.entrypoints=websecure
  #     - traefik.http.routers.next-app.tls.certResolver=letsencrypt
  #     - traefik.http.services.next-app.loadbalancer.server.port=3000

  react-router-app:
    build:
      context: ./react-router-app
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.react-router-app.rule=Host(`react-router-app.dokploy.com`)
      - traefik.http.routers.react-router-app.entrypoints=websecure
      - traefik.http.routers.react-router-app.tls.certResolver=letsencrypt
      - traefik.http.services.react-router-app.loadbalancer.server.port=3000
  # Add more containers below (nginx, postgres, etc.)
# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  dokploy-network:
    external: true
