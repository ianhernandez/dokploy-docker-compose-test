
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `DJSet` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model DJSet
 * 
 */
export type DJSetModel = runtime.Types.Result.DefaultSelection<Prisma.$DJSetPayload>

export type AggregateDJSet = {
  _count: DJSetCountAggregateOutputType | null
  _avg: DJSetAvgAggregateOutputType | null
  _sum: DJSetSumAggregateOutputType | null
  _min: DJSetMinAggregateOutputType | null
  _max: DJSetMaxAggregateOutputType | null
}

export type DJSetAvgAggregateOutputType = {
  duration: number | null
  orderInEpisode: number | null
}

export type DJSetSumAggregateOutputType = {
  duration: number | null
  orderInEpisode: number | null
}

export type DJSetMinAggregateOutputType = {
  id: string | null
  title: string | null
  duration: number | null
  vimeo: string | null
  soundcloud: string | null
  mixcloud: string | null
  mediaUrl: string | null
  thumbnailUrl: string | null
  orderInEpisode: number | null
  djId: string | null
  episodeId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type DJSetMaxAggregateOutputType = {
  id: string | null
  title: string | null
  duration: number | null
  vimeo: string | null
  soundcloud: string | null
  mixcloud: string | null
  mediaUrl: string | null
  thumbnailUrl: string | null
  orderInEpisode: number | null
  djId: string | null
  episodeId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type DJSetCountAggregateOutputType = {
  id: number
  title: number
  duration: number
  vimeo: number
  soundcloud: number
  mixcloud: number
  mediaUrl: number
  thumbnailUrl: number
  orderInEpisode: number
  djId: number
  episodeId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type DJSetAvgAggregateInputType = {
  duration?: true
  orderInEpisode?: true
}

export type DJSetSumAggregateInputType = {
  duration?: true
  orderInEpisode?: true
}

export type DJSetMinAggregateInputType = {
  id?: true
  title?: true
  duration?: true
  vimeo?: true
  soundcloud?: true
  mixcloud?: true
  mediaUrl?: true
  thumbnailUrl?: true
  orderInEpisode?: true
  djId?: true
  episodeId?: true
  createdAt?: true
  updatedAt?: true
}

export type DJSetMaxAggregateInputType = {
  id?: true
  title?: true
  duration?: true
  vimeo?: true
  soundcloud?: true
  mixcloud?: true
  mediaUrl?: true
  thumbnailUrl?: true
  orderInEpisode?: true
  djId?: true
  episodeId?: true
  createdAt?: true
  updatedAt?: true
}

export type DJSetCountAggregateInputType = {
  id?: true
  title?: true
  duration?: true
  vimeo?: true
  soundcloud?: true
  mixcloud?: true
  mediaUrl?: true
  thumbnailUrl?: true
  orderInEpisode?: true
  djId?: true
  episodeId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type DJSetAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which DJSet to aggregate.
   */
  where?: Prisma.DJSetWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of DJSets to fetch.
   */
  orderBy?: Prisma.DJSetOrderByWithRelationInput | Prisma.DJSetOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.DJSetWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` DJSets from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` DJSets.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned DJSets
  **/
  _count?: true | DJSetCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: DJSetAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: DJSetSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: DJSetMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: DJSetMaxAggregateInputType
}

export type GetDJSetAggregateType<T extends DJSetAggregateArgs> = {
      [P in keyof T & keyof AggregateDJSet]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateDJSet[P]>
    : Prisma.GetScalarType<T[P], AggregateDJSet[P]>
}




export type DJSetGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DJSetWhereInput
  orderBy?: Prisma.DJSetOrderByWithAggregationInput | Prisma.DJSetOrderByWithAggregationInput[]
  by: Prisma.DJSetScalarFieldEnum[] | Prisma.DJSetScalarFieldEnum
  having?: Prisma.DJSetScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: DJSetCountAggregateInputType | true
  _avg?: DJSetAvgAggregateInputType
  _sum?: DJSetSumAggregateInputType
  _min?: DJSetMinAggregateInputType
  _max?: DJSetMaxAggregateInputType
}

export type DJSetGroupByOutputType = {
  id: string
  title: string | null
  duration: number | null
  vimeo: string | null
  soundcloud: string | null
  mixcloud: string | null
  mediaUrl: string | null
  thumbnailUrl: string | null
  orderInEpisode: number | null
  djId: string
  episodeId: string
  createdAt: Date
  updatedAt: Date
  _count: DJSetCountAggregateOutputType | null
  _avg: DJSetAvgAggregateOutputType | null
  _sum: DJSetSumAggregateOutputType | null
  _min: DJSetMinAggregateOutputType | null
  _max: DJSetMaxAggregateOutputType | null
}

type GetDJSetGroupByPayload<T extends DJSetGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<DJSetGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof DJSetGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], DJSetGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], DJSetGroupByOutputType[P]>
      }
    >
  > 



export type DJSetWhereInput = {
  AND?: Prisma.DJSetWhereInput | Prisma.DJSetWhereInput[]
  OR?: Prisma.DJSetWhereInput[]
  NOT?: Prisma.DJSetWhereInput | Prisma.DJSetWhereInput[]
  id?: Prisma.StringFilter<"DJSet"> | string
  title?: Prisma.StringNullableFilter<"DJSet"> | string | null
  duration?: Prisma.IntNullableFilter<"DJSet"> | number | null
  vimeo?: Prisma.StringNullableFilter<"DJSet"> | string | null
  soundcloud?: Prisma.StringNullableFilter<"DJSet"> | string | null
  mixcloud?: Prisma.StringNullableFilter<"DJSet"> | string | null
  mediaUrl?: Prisma.StringNullableFilter<"DJSet"> | string | null
  thumbnailUrl?: Prisma.StringNullableFilter<"DJSet"> | string | null
  orderInEpisode?: Prisma.IntNullableFilter<"DJSet"> | number | null
  djId?: Prisma.StringFilter<"DJSet"> | string
  episodeId?: Prisma.StringFilter<"DJSet"> | string
  createdAt?: Prisma.DateTimeFilter<"DJSet"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"DJSet"> | Date | string
  dj?: Prisma.XOR<Prisma.DJScalarRelationFilter, Prisma.DJWhereInput>
  episode?: Prisma.XOR<Prisma.EpisodeScalarRelationFilter, Prisma.EpisodeWhereInput>
  genres?: Prisma.GenreListRelationFilter
}

export type DJSetOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  duration?: Prisma.SortOrderInput | Prisma.SortOrder
  vimeo?: Prisma.SortOrderInput | Prisma.SortOrder
  soundcloud?: Prisma.SortOrderInput | Prisma.SortOrder
  mixcloud?: Prisma.SortOrderInput | Prisma.SortOrder
  mediaUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  thumbnailUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrderInput | Prisma.SortOrder
  djId?: Prisma.SortOrder
  episodeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  dj?: Prisma.DJOrderByWithRelationInput
  episode?: Prisma.EpisodeOrderByWithRelationInput
  genres?: Prisma.GenreOrderByRelationAggregateInput
}

export type DJSetWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.DJSetWhereInput | Prisma.DJSetWhereInput[]
  OR?: Prisma.DJSetWhereInput[]
  NOT?: Prisma.DJSetWhereInput | Prisma.DJSetWhereInput[]
  title?: Prisma.StringNullableFilter<"DJSet"> | string | null
  duration?: Prisma.IntNullableFilter<"DJSet"> | number | null
  vimeo?: Prisma.StringNullableFilter<"DJSet"> | string | null
  soundcloud?: Prisma.StringNullableFilter<"DJSet"> | string | null
  mixcloud?: Prisma.StringNullableFilter<"DJSet"> | string | null
  mediaUrl?: Prisma.StringNullableFilter<"DJSet"> | string | null
  thumbnailUrl?: Prisma.StringNullableFilter<"DJSet"> | string | null
  orderInEpisode?: Prisma.IntNullableFilter<"DJSet"> | number | null
  djId?: Prisma.StringFilter<"DJSet"> | string
  episodeId?: Prisma.StringFilter<"DJSet"> | string
  createdAt?: Prisma.DateTimeFilter<"DJSet"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"DJSet"> | Date | string
  dj?: Prisma.XOR<Prisma.DJScalarRelationFilter, Prisma.DJWhereInput>
  episode?: Prisma.XOR<Prisma.EpisodeScalarRelationFilter, Prisma.EpisodeWhereInput>
  genres?: Prisma.GenreListRelationFilter
}, "id">

export type DJSetOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  duration?: Prisma.SortOrderInput | Prisma.SortOrder
  vimeo?: Prisma.SortOrderInput | Prisma.SortOrder
  soundcloud?: Prisma.SortOrderInput | Prisma.SortOrder
  mixcloud?: Prisma.SortOrderInput | Prisma.SortOrder
  mediaUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  thumbnailUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrderInput | Prisma.SortOrder
  djId?: Prisma.SortOrder
  episodeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.DJSetCountOrderByAggregateInput
  _avg?: Prisma.DJSetAvgOrderByAggregateInput
  _max?: Prisma.DJSetMaxOrderByAggregateInput
  _min?: Prisma.DJSetMinOrderByAggregateInput
  _sum?: Prisma.DJSetSumOrderByAggregateInput
}

export type DJSetScalarWhereWithAggregatesInput = {
  AND?: Prisma.DJSetScalarWhereWithAggregatesInput | Prisma.DJSetScalarWhereWithAggregatesInput[]
  OR?: Prisma.DJSetScalarWhereWithAggregatesInput[]
  NOT?: Prisma.DJSetScalarWhereWithAggregatesInput | Prisma.DJSetScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"DJSet"> | string
  title?: Prisma.StringNullableWithAggregatesFilter<"DJSet"> | string | null
  duration?: Prisma.IntNullableWithAggregatesFilter<"DJSet"> | number | null
  vimeo?: Prisma.StringNullableWithAggregatesFilter<"DJSet"> | string | null
  soundcloud?: Prisma.StringNullableWithAggregatesFilter<"DJSet"> | string | null
  mixcloud?: Prisma.StringNullableWithAggregatesFilter<"DJSet"> | string | null
  mediaUrl?: Prisma.StringNullableWithAggregatesFilter<"DJSet"> | string | null
  thumbnailUrl?: Prisma.StringNullableWithAggregatesFilter<"DJSet"> | string | null
  orderInEpisode?: Prisma.IntNullableWithAggregatesFilter<"DJSet"> | number | null
  djId?: Prisma.StringWithAggregatesFilter<"DJSet"> | string
  episodeId?: Prisma.StringWithAggregatesFilter<"DJSet"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"DJSet"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"DJSet"> | Date | string
}

export type DJSetCreateInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  dj: Prisma.DJCreateNestedOneWithoutSetsInput
  episode: Prisma.EpisodeCreateNestedOneWithoutSetsInput
  genres?: Prisma.GenreCreateNestedManyWithoutSetsInput
}

export type DJSetUncheckedCreateInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  djId: string
  episodeId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  genres?: Prisma.GenreUncheckedCreateNestedManyWithoutSetsInput
}

export type DJSetUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  dj?: Prisma.DJUpdateOneRequiredWithoutSetsNestedInput
  episode?: Prisma.EpisodeUpdateOneRequiredWithoutSetsNestedInput
  genres?: Prisma.GenreUpdateManyWithoutSetsNestedInput
}

export type DJSetUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  djId?: Prisma.StringFieldUpdateOperationsInput | string
  episodeId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  genres?: Prisma.GenreUncheckedUpdateManyWithoutSetsNestedInput
}

export type DJSetCreateManyInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  djId: string
  episodeId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type DJSetUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DJSetUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  djId?: Prisma.StringFieldUpdateOperationsInput | string
  episodeId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DJSetListRelationFilter = {
  every?: Prisma.DJSetWhereInput
  some?: Prisma.DJSetWhereInput
  none?: Prisma.DJSetWhereInput
}

export type DJSetOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type DJSetCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  vimeo?: Prisma.SortOrder
  soundcloud?: Prisma.SortOrder
  mixcloud?: Prisma.SortOrder
  mediaUrl?: Prisma.SortOrder
  thumbnailUrl?: Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrder
  djId?: Prisma.SortOrder
  episodeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type DJSetAvgOrderByAggregateInput = {
  duration?: Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrder
}

export type DJSetMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  vimeo?: Prisma.SortOrder
  soundcloud?: Prisma.SortOrder
  mixcloud?: Prisma.SortOrder
  mediaUrl?: Prisma.SortOrder
  thumbnailUrl?: Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrder
  djId?: Prisma.SortOrder
  episodeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type DJSetMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  vimeo?: Prisma.SortOrder
  soundcloud?: Prisma.SortOrder
  mixcloud?: Prisma.SortOrder
  mediaUrl?: Prisma.SortOrder
  thumbnailUrl?: Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrder
  djId?: Prisma.SortOrder
  episodeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type DJSetSumOrderByAggregateInput = {
  duration?: Prisma.SortOrder
  orderInEpisode?: Prisma.SortOrder
}

export type DJSetCreateNestedManyWithoutDjInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutDjInput, Prisma.DJSetUncheckedCreateWithoutDjInput> | Prisma.DJSetCreateWithoutDjInput[] | Prisma.DJSetUncheckedCreateWithoutDjInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutDjInput | Prisma.DJSetCreateOrConnectWithoutDjInput[]
  createMany?: Prisma.DJSetCreateManyDjInputEnvelope
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
}

export type DJSetUncheckedCreateNestedManyWithoutDjInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutDjInput, Prisma.DJSetUncheckedCreateWithoutDjInput> | Prisma.DJSetCreateWithoutDjInput[] | Prisma.DJSetUncheckedCreateWithoutDjInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutDjInput | Prisma.DJSetCreateOrConnectWithoutDjInput[]
  createMany?: Prisma.DJSetCreateManyDjInputEnvelope
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
}

export type DJSetUpdateManyWithoutDjNestedInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutDjInput, Prisma.DJSetUncheckedCreateWithoutDjInput> | Prisma.DJSetCreateWithoutDjInput[] | Prisma.DJSetUncheckedCreateWithoutDjInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutDjInput | Prisma.DJSetCreateOrConnectWithoutDjInput[]
  upsert?: Prisma.DJSetUpsertWithWhereUniqueWithoutDjInput | Prisma.DJSetUpsertWithWhereUniqueWithoutDjInput[]
  createMany?: Prisma.DJSetCreateManyDjInputEnvelope
  set?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  disconnect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  delete?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  update?: Prisma.DJSetUpdateWithWhereUniqueWithoutDjInput | Prisma.DJSetUpdateWithWhereUniqueWithoutDjInput[]
  updateMany?: Prisma.DJSetUpdateManyWithWhereWithoutDjInput | Prisma.DJSetUpdateManyWithWhereWithoutDjInput[]
  deleteMany?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
}

export type DJSetUncheckedUpdateManyWithoutDjNestedInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutDjInput, Prisma.DJSetUncheckedCreateWithoutDjInput> | Prisma.DJSetCreateWithoutDjInput[] | Prisma.DJSetUncheckedCreateWithoutDjInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutDjInput | Prisma.DJSetCreateOrConnectWithoutDjInput[]
  upsert?: Prisma.DJSetUpsertWithWhereUniqueWithoutDjInput | Prisma.DJSetUpsertWithWhereUniqueWithoutDjInput[]
  createMany?: Prisma.DJSetCreateManyDjInputEnvelope
  set?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  disconnect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  delete?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  update?: Prisma.DJSetUpdateWithWhereUniqueWithoutDjInput | Prisma.DJSetUpdateWithWhereUniqueWithoutDjInput[]
  updateMany?: Prisma.DJSetUpdateManyWithWhereWithoutDjInput | Prisma.DJSetUpdateManyWithWhereWithoutDjInput[]
  deleteMany?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
}

export type DJSetCreateNestedManyWithoutEpisodeInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutEpisodeInput, Prisma.DJSetUncheckedCreateWithoutEpisodeInput> | Prisma.DJSetCreateWithoutEpisodeInput[] | Prisma.DJSetUncheckedCreateWithoutEpisodeInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutEpisodeInput | Prisma.DJSetCreateOrConnectWithoutEpisodeInput[]
  createMany?: Prisma.DJSetCreateManyEpisodeInputEnvelope
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
}

export type DJSetUncheckedCreateNestedManyWithoutEpisodeInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutEpisodeInput, Prisma.DJSetUncheckedCreateWithoutEpisodeInput> | Prisma.DJSetCreateWithoutEpisodeInput[] | Prisma.DJSetUncheckedCreateWithoutEpisodeInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutEpisodeInput | Prisma.DJSetCreateOrConnectWithoutEpisodeInput[]
  createMany?: Prisma.DJSetCreateManyEpisodeInputEnvelope
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
}

export type DJSetUpdateManyWithoutEpisodeNestedInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutEpisodeInput, Prisma.DJSetUncheckedCreateWithoutEpisodeInput> | Prisma.DJSetCreateWithoutEpisodeInput[] | Prisma.DJSetUncheckedCreateWithoutEpisodeInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutEpisodeInput | Prisma.DJSetCreateOrConnectWithoutEpisodeInput[]
  upsert?: Prisma.DJSetUpsertWithWhereUniqueWithoutEpisodeInput | Prisma.DJSetUpsertWithWhereUniqueWithoutEpisodeInput[]
  createMany?: Prisma.DJSetCreateManyEpisodeInputEnvelope
  set?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  disconnect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  delete?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  update?: Prisma.DJSetUpdateWithWhereUniqueWithoutEpisodeInput | Prisma.DJSetUpdateWithWhereUniqueWithoutEpisodeInput[]
  updateMany?: Prisma.DJSetUpdateManyWithWhereWithoutEpisodeInput | Prisma.DJSetUpdateManyWithWhereWithoutEpisodeInput[]
  deleteMany?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
}

export type DJSetUncheckedUpdateManyWithoutEpisodeNestedInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutEpisodeInput, Prisma.DJSetUncheckedCreateWithoutEpisodeInput> | Prisma.DJSetCreateWithoutEpisodeInput[] | Prisma.DJSetUncheckedCreateWithoutEpisodeInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutEpisodeInput | Prisma.DJSetCreateOrConnectWithoutEpisodeInput[]
  upsert?: Prisma.DJSetUpsertWithWhereUniqueWithoutEpisodeInput | Prisma.DJSetUpsertWithWhereUniqueWithoutEpisodeInput[]
  createMany?: Prisma.DJSetCreateManyEpisodeInputEnvelope
  set?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  disconnect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  delete?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  update?: Prisma.DJSetUpdateWithWhereUniqueWithoutEpisodeInput | Prisma.DJSetUpdateWithWhereUniqueWithoutEpisodeInput[]
  updateMany?: Prisma.DJSetUpdateManyWithWhereWithoutEpisodeInput | Prisma.DJSetUpdateManyWithWhereWithoutEpisodeInput[]
  deleteMany?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type DJSetCreateNestedManyWithoutGenresInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutGenresInput, Prisma.DJSetUncheckedCreateWithoutGenresInput> | Prisma.DJSetCreateWithoutGenresInput[] | Prisma.DJSetUncheckedCreateWithoutGenresInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutGenresInput | Prisma.DJSetCreateOrConnectWithoutGenresInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
}

export type DJSetUncheckedCreateNestedManyWithoutGenresInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutGenresInput, Prisma.DJSetUncheckedCreateWithoutGenresInput> | Prisma.DJSetCreateWithoutGenresInput[] | Prisma.DJSetUncheckedCreateWithoutGenresInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutGenresInput | Prisma.DJSetCreateOrConnectWithoutGenresInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
}

export type DJSetUpdateManyWithoutGenresNestedInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutGenresInput, Prisma.DJSetUncheckedCreateWithoutGenresInput> | Prisma.DJSetCreateWithoutGenresInput[] | Prisma.DJSetUncheckedCreateWithoutGenresInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutGenresInput | Prisma.DJSetCreateOrConnectWithoutGenresInput[]
  upsert?: Prisma.DJSetUpsertWithWhereUniqueWithoutGenresInput | Prisma.DJSetUpsertWithWhereUniqueWithoutGenresInput[]
  set?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  disconnect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  delete?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  update?: Prisma.DJSetUpdateWithWhereUniqueWithoutGenresInput | Prisma.DJSetUpdateWithWhereUniqueWithoutGenresInput[]
  updateMany?: Prisma.DJSetUpdateManyWithWhereWithoutGenresInput | Prisma.DJSetUpdateManyWithWhereWithoutGenresInput[]
  deleteMany?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
}

export type DJSetUncheckedUpdateManyWithoutGenresNestedInput = {
  create?: Prisma.XOR<Prisma.DJSetCreateWithoutGenresInput, Prisma.DJSetUncheckedCreateWithoutGenresInput> | Prisma.DJSetCreateWithoutGenresInput[] | Prisma.DJSetUncheckedCreateWithoutGenresInput[]
  connectOrCreate?: Prisma.DJSetCreateOrConnectWithoutGenresInput | Prisma.DJSetCreateOrConnectWithoutGenresInput[]
  upsert?: Prisma.DJSetUpsertWithWhereUniqueWithoutGenresInput | Prisma.DJSetUpsertWithWhereUniqueWithoutGenresInput[]
  set?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  disconnect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  delete?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  connect?: Prisma.DJSetWhereUniqueInput | Prisma.DJSetWhereUniqueInput[]
  update?: Prisma.DJSetUpdateWithWhereUniqueWithoutGenresInput | Prisma.DJSetUpdateWithWhereUniqueWithoutGenresInput[]
  updateMany?: Prisma.DJSetUpdateManyWithWhereWithoutGenresInput | Prisma.DJSetUpdateManyWithWhereWithoutGenresInput[]
  deleteMany?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
}

export type DJSetCreateWithoutDjInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  episode: Prisma.EpisodeCreateNestedOneWithoutSetsInput
  genres?: Prisma.GenreCreateNestedManyWithoutSetsInput
}

export type DJSetUncheckedCreateWithoutDjInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  episodeId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  genres?: Prisma.GenreUncheckedCreateNestedManyWithoutSetsInput
}

export type DJSetCreateOrConnectWithoutDjInput = {
  where: Prisma.DJSetWhereUniqueInput
  create: Prisma.XOR<Prisma.DJSetCreateWithoutDjInput, Prisma.DJSetUncheckedCreateWithoutDjInput>
}

export type DJSetCreateManyDjInputEnvelope = {
  data: Prisma.DJSetCreateManyDjInput | Prisma.DJSetCreateManyDjInput[]
  skipDuplicates?: boolean
}

export type DJSetUpsertWithWhereUniqueWithoutDjInput = {
  where: Prisma.DJSetWhereUniqueInput
  update: Prisma.XOR<Prisma.DJSetUpdateWithoutDjInput, Prisma.DJSetUncheckedUpdateWithoutDjInput>
  create: Prisma.XOR<Prisma.DJSetCreateWithoutDjInput, Prisma.DJSetUncheckedCreateWithoutDjInput>
}

export type DJSetUpdateWithWhereUniqueWithoutDjInput = {
  where: Prisma.DJSetWhereUniqueInput
  data: Prisma.XOR<Prisma.DJSetUpdateWithoutDjInput, Prisma.DJSetUncheckedUpdateWithoutDjInput>
}

export type DJSetUpdateManyWithWhereWithoutDjInput = {
  where: Prisma.DJSetScalarWhereInput
  data: Prisma.XOR<Prisma.DJSetUpdateManyMutationInput, Prisma.DJSetUncheckedUpdateManyWithoutDjInput>
}

export type DJSetScalarWhereInput = {
  AND?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
  OR?: Prisma.DJSetScalarWhereInput[]
  NOT?: Prisma.DJSetScalarWhereInput | Prisma.DJSetScalarWhereInput[]
  id?: Prisma.StringFilter<"DJSet"> | string
  title?: Prisma.StringNullableFilter<"DJSet"> | string | null
  duration?: Prisma.IntNullableFilter<"DJSet"> | number | null
  vimeo?: Prisma.StringNullableFilter<"DJSet"> | string | null
  soundcloud?: Prisma.StringNullableFilter<"DJSet"> | string | null
  mixcloud?: Prisma.StringNullableFilter<"DJSet"> | string | null
  mediaUrl?: Prisma.StringNullableFilter<"DJSet"> | string | null
  thumbnailUrl?: Prisma.StringNullableFilter<"DJSet"> | string | null
  orderInEpisode?: Prisma.IntNullableFilter<"DJSet"> | number | null
  djId?: Prisma.StringFilter<"DJSet"> | string
  episodeId?: Prisma.StringFilter<"DJSet"> | string
  createdAt?: Prisma.DateTimeFilter<"DJSet"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"DJSet"> | Date | string
}

export type DJSetCreateWithoutEpisodeInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  dj: Prisma.DJCreateNestedOneWithoutSetsInput
  genres?: Prisma.GenreCreateNestedManyWithoutSetsInput
}

export type DJSetUncheckedCreateWithoutEpisodeInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  djId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  genres?: Prisma.GenreUncheckedCreateNestedManyWithoutSetsInput
}

export type DJSetCreateOrConnectWithoutEpisodeInput = {
  where: Prisma.DJSetWhereUniqueInput
  create: Prisma.XOR<Prisma.DJSetCreateWithoutEpisodeInput, Prisma.DJSetUncheckedCreateWithoutEpisodeInput>
}

export type DJSetCreateManyEpisodeInputEnvelope = {
  data: Prisma.DJSetCreateManyEpisodeInput | Prisma.DJSetCreateManyEpisodeInput[]
  skipDuplicates?: boolean
}

export type DJSetUpsertWithWhereUniqueWithoutEpisodeInput = {
  where: Prisma.DJSetWhereUniqueInput
  update: Prisma.XOR<Prisma.DJSetUpdateWithoutEpisodeInput, Prisma.DJSetUncheckedUpdateWithoutEpisodeInput>
  create: Prisma.XOR<Prisma.DJSetCreateWithoutEpisodeInput, Prisma.DJSetUncheckedCreateWithoutEpisodeInput>
}

export type DJSetUpdateWithWhereUniqueWithoutEpisodeInput = {
  where: Prisma.DJSetWhereUniqueInput
  data: Prisma.XOR<Prisma.DJSetUpdateWithoutEpisodeInput, Prisma.DJSetUncheckedUpdateWithoutEpisodeInput>
}

export type DJSetUpdateManyWithWhereWithoutEpisodeInput = {
  where: Prisma.DJSetScalarWhereInput
  data: Prisma.XOR<Prisma.DJSetUpdateManyMutationInput, Prisma.DJSetUncheckedUpdateManyWithoutEpisodeInput>
}

export type DJSetCreateWithoutGenresInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  dj: Prisma.DJCreateNestedOneWithoutSetsInput
  episode: Prisma.EpisodeCreateNestedOneWithoutSetsInput
}

export type DJSetUncheckedCreateWithoutGenresInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  djId: string
  episodeId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type DJSetCreateOrConnectWithoutGenresInput = {
  where: Prisma.DJSetWhereUniqueInput
  create: Prisma.XOR<Prisma.DJSetCreateWithoutGenresInput, Prisma.DJSetUncheckedCreateWithoutGenresInput>
}

export type DJSetUpsertWithWhereUniqueWithoutGenresInput = {
  where: Prisma.DJSetWhereUniqueInput
  update: Prisma.XOR<Prisma.DJSetUpdateWithoutGenresInput, Prisma.DJSetUncheckedUpdateWithoutGenresInput>
  create: Prisma.XOR<Prisma.DJSetCreateWithoutGenresInput, Prisma.DJSetUncheckedCreateWithoutGenresInput>
}

export type DJSetUpdateWithWhereUniqueWithoutGenresInput = {
  where: Prisma.DJSetWhereUniqueInput
  data: Prisma.XOR<Prisma.DJSetUpdateWithoutGenresInput, Prisma.DJSetUncheckedUpdateWithoutGenresInput>
}

export type DJSetUpdateManyWithWhereWithoutGenresInput = {
  where: Prisma.DJSetScalarWhereInput
  data: Prisma.XOR<Prisma.DJSetUpdateManyMutationInput, Prisma.DJSetUncheckedUpdateManyWithoutGenresInput>
}

export type DJSetCreateManyDjInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  episodeId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type DJSetUpdateWithoutDjInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  episode?: Prisma.EpisodeUpdateOneRequiredWithoutSetsNestedInput
  genres?: Prisma.GenreUpdateManyWithoutSetsNestedInput
}

export type DJSetUncheckedUpdateWithoutDjInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  episodeId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  genres?: Prisma.GenreUncheckedUpdateManyWithoutSetsNestedInput
}

export type DJSetUncheckedUpdateManyWithoutDjInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  episodeId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DJSetCreateManyEpisodeInput = {
  id?: string
  title?: string | null
  duration?: number | null
  vimeo?: string | null
  soundcloud?: string | null
  mixcloud?: string | null
  mediaUrl?: string | null
  thumbnailUrl?: string | null
  orderInEpisode?: number | null
  djId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type DJSetUpdateWithoutEpisodeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  dj?: Prisma.DJUpdateOneRequiredWithoutSetsNestedInput
  genres?: Prisma.GenreUpdateManyWithoutSetsNestedInput
}

export type DJSetUncheckedUpdateWithoutEpisodeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  djId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  genres?: Prisma.GenreUncheckedUpdateManyWithoutSetsNestedInput
}

export type DJSetUncheckedUpdateManyWithoutEpisodeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  djId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DJSetUpdateWithoutGenresInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  dj?: Prisma.DJUpdateOneRequiredWithoutSetsNestedInput
  episode?: Prisma.EpisodeUpdateOneRequiredWithoutSetsNestedInput
}

export type DJSetUncheckedUpdateWithoutGenresInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  djId?: Prisma.StringFieldUpdateOperationsInput | string
  episodeId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DJSetUncheckedUpdateManyWithoutGenresInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  vimeo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  soundcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mixcloud?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mediaUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orderInEpisode?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  djId?: Prisma.StringFieldUpdateOperationsInput | string
  episodeId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type DJSetCountOutputType
 */

export type DJSetCountOutputType = {
  genres: number
}

export type DJSetCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  genres?: boolean | DJSetCountOutputTypeCountGenresArgs
}

/**
 * DJSetCountOutputType without action
 */
export type DJSetCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSetCountOutputType
   */
  select?: Prisma.DJSetCountOutputTypeSelect<ExtArgs> | null
}

/**
 * DJSetCountOutputType without action
 */
export type DJSetCountOutputTypeCountGenresArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GenreWhereInput
}


export type DJSetSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  duration?: boolean
  vimeo?: boolean
  soundcloud?: boolean
  mixcloud?: boolean
  mediaUrl?: boolean
  thumbnailUrl?: boolean
  orderInEpisode?: boolean
  djId?: boolean
  episodeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  dj?: boolean | Prisma.DJDefaultArgs<ExtArgs>
  episode?: boolean | Prisma.EpisodeDefaultArgs<ExtArgs>
  genres?: boolean | Prisma.DJSet$genresArgs<ExtArgs>
  _count?: boolean | Prisma.DJSetCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["dJSet"]>

export type DJSetSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  duration?: boolean
  vimeo?: boolean
  soundcloud?: boolean
  mixcloud?: boolean
  mediaUrl?: boolean
  thumbnailUrl?: boolean
  orderInEpisode?: boolean
  djId?: boolean
  episodeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  dj?: boolean | Prisma.DJDefaultArgs<ExtArgs>
  episode?: boolean | Prisma.EpisodeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["dJSet"]>

export type DJSetSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  duration?: boolean
  vimeo?: boolean
  soundcloud?: boolean
  mixcloud?: boolean
  mediaUrl?: boolean
  thumbnailUrl?: boolean
  orderInEpisode?: boolean
  djId?: boolean
  episodeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  dj?: boolean | Prisma.DJDefaultArgs<ExtArgs>
  episode?: boolean | Prisma.EpisodeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["dJSet"]>

export type DJSetSelectScalar = {
  id?: boolean
  title?: boolean
  duration?: boolean
  vimeo?: boolean
  soundcloud?: boolean
  mixcloud?: boolean
  mediaUrl?: boolean
  thumbnailUrl?: boolean
  orderInEpisode?: boolean
  djId?: boolean
  episodeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type DJSetOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "duration" | "vimeo" | "soundcloud" | "mixcloud" | "mediaUrl" | "thumbnailUrl" | "orderInEpisode" | "djId" | "episodeId" | "createdAt" | "updatedAt", ExtArgs["result"]["dJSet"]>
export type DJSetInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  dj?: boolean | Prisma.DJDefaultArgs<ExtArgs>
  episode?: boolean | Prisma.EpisodeDefaultArgs<ExtArgs>
  genres?: boolean | Prisma.DJSet$genresArgs<ExtArgs>
  _count?: boolean | Prisma.DJSetCountOutputTypeDefaultArgs<ExtArgs>
}
export type DJSetIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  dj?: boolean | Prisma.DJDefaultArgs<ExtArgs>
  episode?: boolean | Prisma.EpisodeDefaultArgs<ExtArgs>
}
export type DJSetIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  dj?: boolean | Prisma.DJDefaultArgs<ExtArgs>
  episode?: boolean | Prisma.EpisodeDefaultArgs<ExtArgs>
}

export type $DJSetPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "DJSet"
  objects: {
    dj: Prisma.$DJPayload<ExtArgs>
    episode: Prisma.$EpisodePayload<ExtArgs>
    genres: Prisma.$GenrePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string | null
    duration: number | null
    vimeo: string | null
    soundcloud: string | null
    mixcloud: string | null
    mediaUrl: string | null
    thumbnailUrl: string | null
    orderInEpisode: number | null
    djId: string
    episodeId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["dJSet"]>
  composites: {}
}

export type DJSetGetPayload<S extends boolean | null | undefined | DJSetDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$DJSetPayload, S>

export type DJSetCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<DJSetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: DJSetCountAggregateInputType | true
  }

export interface DJSetDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DJSet'], meta: { name: 'DJSet' } }
  /**
   * Find zero or one DJSet that matches the filter.
   * @param {DJSetFindUniqueArgs} args - Arguments to find a DJSet
   * @example
   * // Get one DJSet
   * const dJSet = await prisma.dJSet.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends DJSetFindUniqueArgs>(args: Prisma.SelectSubset<T, DJSetFindUniqueArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one DJSet that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {DJSetFindUniqueOrThrowArgs} args - Arguments to find a DJSet
   * @example
   * // Get one DJSet
   * const dJSet = await prisma.dJSet.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends DJSetFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, DJSetFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first DJSet that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetFindFirstArgs} args - Arguments to find a DJSet
   * @example
   * // Get one DJSet
   * const dJSet = await prisma.dJSet.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends DJSetFindFirstArgs>(args?: Prisma.SelectSubset<T, DJSetFindFirstArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first DJSet that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetFindFirstOrThrowArgs} args - Arguments to find a DJSet
   * @example
   * // Get one DJSet
   * const dJSet = await prisma.dJSet.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends DJSetFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, DJSetFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more DJSets that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all DJSets
   * const dJSets = await prisma.dJSet.findMany()
   * 
   * // Get first 10 DJSets
   * const dJSets = await prisma.dJSet.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const dJSetWithIdOnly = await prisma.dJSet.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends DJSetFindManyArgs>(args?: Prisma.SelectSubset<T, DJSetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a DJSet.
   * @param {DJSetCreateArgs} args - Arguments to create a DJSet.
   * @example
   * // Create one DJSet
   * const DJSet = await prisma.dJSet.create({
   *   data: {
   *     // ... data to create a DJSet
   *   }
   * })
   * 
   */
  create<T extends DJSetCreateArgs>(args: Prisma.SelectSubset<T, DJSetCreateArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many DJSets.
   * @param {DJSetCreateManyArgs} args - Arguments to create many DJSets.
   * @example
   * // Create many DJSets
   * const dJSet = await prisma.dJSet.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends DJSetCreateManyArgs>(args?: Prisma.SelectSubset<T, DJSetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many DJSets and returns the data saved in the database.
   * @param {DJSetCreateManyAndReturnArgs} args - Arguments to create many DJSets.
   * @example
   * // Create many DJSets
   * const dJSet = await prisma.dJSet.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many DJSets and only return the `id`
   * const dJSetWithIdOnly = await prisma.dJSet.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends DJSetCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, DJSetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a DJSet.
   * @param {DJSetDeleteArgs} args - Arguments to delete one DJSet.
   * @example
   * // Delete one DJSet
   * const DJSet = await prisma.dJSet.delete({
   *   where: {
   *     // ... filter to delete one DJSet
   *   }
   * })
   * 
   */
  delete<T extends DJSetDeleteArgs>(args: Prisma.SelectSubset<T, DJSetDeleteArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one DJSet.
   * @param {DJSetUpdateArgs} args - Arguments to update one DJSet.
   * @example
   * // Update one DJSet
   * const dJSet = await prisma.dJSet.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends DJSetUpdateArgs>(args: Prisma.SelectSubset<T, DJSetUpdateArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more DJSets.
   * @param {DJSetDeleteManyArgs} args - Arguments to filter DJSets to delete.
   * @example
   * // Delete a few DJSets
   * const { count } = await prisma.dJSet.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends DJSetDeleteManyArgs>(args?: Prisma.SelectSubset<T, DJSetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more DJSets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many DJSets
   * const dJSet = await prisma.dJSet.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends DJSetUpdateManyArgs>(args: Prisma.SelectSubset<T, DJSetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more DJSets and returns the data updated in the database.
   * @param {DJSetUpdateManyAndReturnArgs} args - Arguments to update many DJSets.
   * @example
   * // Update many DJSets
   * const dJSet = await prisma.dJSet.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more DJSets and only return the `id`
   * const dJSetWithIdOnly = await prisma.dJSet.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends DJSetUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, DJSetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one DJSet.
   * @param {DJSetUpsertArgs} args - Arguments to update or create a DJSet.
   * @example
   * // Update or create a DJSet
   * const dJSet = await prisma.dJSet.upsert({
   *   create: {
   *     // ... data to create a DJSet
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the DJSet we want to update
   *   }
   * })
   */
  upsert<T extends DJSetUpsertArgs>(args: Prisma.SelectSubset<T, DJSetUpsertArgs<ExtArgs>>): Prisma.Prisma__DJSetClient<runtime.Types.Result.GetResult<Prisma.$DJSetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of DJSets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetCountArgs} args - Arguments to filter DJSets to count.
   * @example
   * // Count the number of DJSets
   * const count = await prisma.dJSet.count({
   *   where: {
   *     // ... the filter for the DJSets we want to count
   *   }
   * })
  **/
  count<T extends DJSetCountArgs>(
    args?: Prisma.Subset<T, DJSetCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], DJSetCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a DJSet.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends DJSetAggregateArgs>(args: Prisma.Subset<T, DJSetAggregateArgs>): Prisma.PrismaPromise<GetDJSetAggregateType<T>>

  /**
   * Group by DJSet.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DJSetGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends DJSetGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: DJSetGroupByArgs['orderBy'] }
      : { orderBy?: DJSetGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, DJSetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDJSetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the DJSet model
 */
readonly fields: DJSetFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for DJSet.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__DJSetClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  dj<T extends Prisma.DJDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.DJDefaultArgs<ExtArgs>>): Prisma.Prisma__DJClient<runtime.Types.Result.GetResult<Prisma.$DJPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  episode<T extends Prisma.EpisodeDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EpisodeDefaultArgs<ExtArgs>>): Prisma.Prisma__EpisodeClient<runtime.Types.Result.GetResult<Prisma.$EpisodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  genres<T extends Prisma.DJSet$genresArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.DJSet$genresArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GenrePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the DJSet model
 */
export interface DJSetFieldRefs {
  readonly id: Prisma.FieldRef<"DJSet", 'String'>
  readonly title: Prisma.FieldRef<"DJSet", 'String'>
  readonly duration: Prisma.FieldRef<"DJSet", 'Int'>
  readonly vimeo: Prisma.FieldRef<"DJSet", 'String'>
  readonly soundcloud: Prisma.FieldRef<"DJSet", 'String'>
  readonly mixcloud: Prisma.FieldRef<"DJSet", 'String'>
  readonly mediaUrl: Prisma.FieldRef<"DJSet", 'String'>
  readonly thumbnailUrl: Prisma.FieldRef<"DJSet", 'String'>
  readonly orderInEpisode: Prisma.FieldRef<"DJSet", 'Int'>
  readonly djId: Prisma.FieldRef<"DJSet", 'String'>
  readonly episodeId: Prisma.FieldRef<"DJSet", 'String'>
  readonly createdAt: Prisma.FieldRef<"DJSet", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"DJSet", 'DateTime'>
}
    

// Custom InputTypes
/**
 * DJSet findUnique
 */
export type DJSetFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * Filter, which DJSet to fetch.
   */
  where: Prisma.DJSetWhereUniqueInput
}

/**
 * DJSet findUniqueOrThrow
 */
export type DJSetFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * Filter, which DJSet to fetch.
   */
  where: Prisma.DJSetWhereUniqueInput
}

/**
 * DJSet findFirst
 */
export type DJSetFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * Filter, which DJSet to fetch.
   */
  where?: Prisma.DJSetWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of DJSets to fetch.
   */
  orderBy?: Prisma.DJSetOrderByWithRelationInput | Prisma.DJSetOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for DJSets.
   */
  cursor?: Prisma.DJSetWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` DJSets from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` DJSets.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of DJSets.
   */
  distinct?: Prisma.DJSetScalarFieldEnum | Prisma.DJSetScalarFieldEnum[]
}

/**
 * DJSet findFirstOrThrow
 */
export type DJSetFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * Filter, which DJSet to fetch.
   */
  where?: Prisma.DJSetWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of DJSets to fetch.
   */
  orderBy?: Prisma.DJSetOrderByWithRelationInput | Prisma.DJSetOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for DJSets.
   */
  cursor?: Prisma.DJSetWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` DJSets from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` DJSets.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of DJSets.
   */
  distinct?: Prisma.DJSetScalarFieldEnum | Prisma.DJSetScalarFieldEnum[]
}

/**
 * DJSet findMany
 */
export type DJSetFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * Filter, which DJSets to fetch.
   */
  where?: Prisma.DJSetWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of DJSets to fetch.
   */
  orderBy?: Prisma.DJSetOrderByWithRelationInput | Prisma.DJSetOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing DJSets.
   */
  cursor?: Prisma.DJSetWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` DJSets from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` DJSets.
   */
  skip?: number
  distinct?: Prisma.DJSetScalarFieldEnum | Prisma.DJSetScalarFieldEnum[]
}

/**
 * DJSet create
 */
export type DJSetCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * The data needed to create a DJSet.
   */
  data: Prisma.XOR<Prisma.DJSetCreateInput, Prisma.DJSetUncheckedCreateInput>
}

/**
 * DJSet createMany
 */
export type DJSetCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many DJSets.
   */
  data: Prisma.DJSetCreateManyInput | Prisma.DJSetCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * DJSet createManyAndReturn
 */
export type DJSetCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * The data used to create many DJSets.
   */
  data: Prisma.DJSetCreateManyInput | Prisma.DJSetCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * DJSet update
 */
export type DJSetUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * The data needed to update a DJSet.
   */
  data: Prisma.XOR<Prisma.DJSetUpdateInput, Prisma.DJSetUncheckedUpdateInput>
  /**
   * Choose, which DJSet to update.
   */
  where: Prisma.DJSetWhereUniqueInput
}

/**
 * DJSet updateMany
 */
export type DJSetUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update DJSets.
   */
  data: Prisma.XOR<Prisma.DJSetUpdateManyMutationInput, Prisma.DJSetUncheckedUpdateManyInput>
  /**
   * Filter which DJSets to update
   */
  where?: Prisma.DJSetWhereInput
  /**
   * Limit how many DJSets to update.
   */
  limit?: number
}

/**
 * DJSet updateManyAndReturn
 */
export type DJSetUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * The data used to update DJSets.
   */
  data: Prisma.XOR<Prisma.DJSetUpdateManyMutationInput, Prisma.DJSetUncheckedUpdateManyInput>
  /**
   * Filter which DJSets to update
   */
  where?: Prisma.DJSetWhereInput
  /**
   * Limit how many DJSets to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * DJSet upsert
 */
export type DJSetUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * The filter to search for the DJSet to update in case it exists.
   */
  where: Prisma.DJSetWhereUniqueInput
  /**
   * In case the DJSet found by the `where` argument doesn't exist, create a new DJSet with this data.
   */
  create: Prisma.XOR<Prisma.DJSetCreateInput, Prisma.DJSetUncheckedCreateInput>
  /**
   * In case the DJSet was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.DJSetUpdateInput, Prisma.DJSetUncheckedUpdateInput>
}

/**
 * DJSet delete
 */
export type DJSetDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
  /**
   * Filter which DJSet to delete.
   */
  where: Prisma.DJSetWhereUniqueInput
}

/**
 * DJSet deleteMany
 */
export type DJSetDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which DJSets to delete
   */
  where?: Prisma.DJSetWhereInput
  /**
   * Limit how many DJSets to delete.
   */
  limit?: number
}

/**
 * DJSet.genres
 */
export type DJSet$genresArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Genre
   */
  select?: Prisma.GenreSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Genre
   */
  omit?: Prisma.GenreOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GenreInclude<ExtArgs> | null
  where?: Prisma.GenreWhereInput
  orderBy?: Prisma.GenreOrderByWithRelationInput | Prisma.GenreOrderByWithRelationInput[]
  cursor?: Prisma.GenreWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GenreScalarFieldEnum | Prisma.GenreScalarFieldEnum[]
}

/**
 * DJSet without action
 */
export type DJSetDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DJSet
   */
  select?: Prisma.DJSetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DJSet
   */
  omit?: Prisma.DJSetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DJSetInclude<ExtArgs> | null
}
